/*
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 *    ARViewer.java
 *    Copyright (C) 2003 DESS IAGL of Lille
 *
 */

import help.HelpFrame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.print.PageFormat;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.IOException;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import rules.Rule;
import rulesParser.RulesParser;
import selection.MultipleListSelectionEvent;
import selection.MultipleListSelectionListener;
import selection.RulesSelectionPanel;
import visu1.Panel3D;
import visu2.PanelLine;

/**
 *
 * @author  beleg
 */
public class ARViewer
	extends javax.swing.JFrame
	implements MultipleListSelectionListener, ActionListener {

	private Rule[] visu1Rules;
	private Rule[] visu2Rules;
	private Rule[] visu3Rules;
	private String[] criteres;

	private int x3D;
	private int y3D;

	/** Creates new form JFrame */
	public ARViewer() {
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	private void initComponents() {
		viewerTabbedPanel = new javax.swing.JTabbedPane();
		selectionPanel = new selection.SelectionPanel();
		visu1Panel3D = new Panel3D();
		visu1Panel = new RulesSelectionPanel(visu1Panel3D);
		visu1Panel.addActionListener(this);
		visu2PanelLine = new PanelLine();
		visu2Panel = new RulesSelectionPanel(visu2PanelLine);
		visu2Panel.setSingleSelection();
		visu2Panel.addActionListener(this);
		visu2Panel.setColored();
		visu3Panel = new visu3.PanelDDecker();
		viewerBar = new javax.swing.JMenuBar();
		fileMenu = new javax.swing.JMenu();
		openItem = new javax.swing.JMenuItem();
		printItem = new javax.swing.JMenuItem();
		saveItem = new javax.swing.JMenuItem();
		quitItem = new javax.swing.JMenuItem();
		helpMenu = new javax.swing.JMenu();
		aboutItem = new javax.swing.JMenuItem();
		contentsItem = new javax.swing.JMenuItem();

		selectionPanel.addMultipleListSelectionListener(this);

		setTitle("Association Rules Viewer");
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				exitForm(evt);
			}
		});

		viewerTabbedPanel.addChangeListener(new ChangeListener() {
			public void stateChanged(ChangeEvent e) {
				panelChanged();
			}

		});

		viewerTabbedPanel.addTab("Selection", selectionPanel);
		viewerTabbedPanel.addTab("3D Representation", visu1Panel);
		viewerTabbedPanel.addTab("N Dimensional Line", visu2Panel);
		viewerTabbedPanel.addTab("Double Decker Plot", visu3Panel);

		viewerTabbedPanel.setEnabledAt(1, false);
		viewerTabbedPanel.setEnabledAt(2, false);
		viewerTabbedPanel.setEnabledAt(3, false);

		getContentPane().add(viewerTabbedPanel, java.awt.BorderLayout.CENTER);

		fileMenu.setText("File");
		openItem.setText("Open");
		openItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				openPerformed(evt);
			}
		});

		fileMenu.add(openItem);

		printItem.setText("Print");
		printItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				printPerformed(evt);
			}
		});

		fileMenu.add(printItem);

		saveItem.setText("Save as");
		saveItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				savePerformed(evt);
			}
		});

		fileMenu.add(saveItem);

		quitItem.setText("Quit");
		quitItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				quitPerformed(evt);
			}
		});

		fileMenu.add(quitItem);

		viewerBar.add(fileMenu);

		helpMenu.setText("Help");
		aboutItem.setText("About");
		aboutItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				showAbout(evt);
			}
		});

		helpMenu.add(aboutItem);

		contentsItem.setText("Contents");
		contentsItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				showHelp(evt);
			}
		});

		helpMenu.add(contentsItem);

		viewerBar.add(helpMenu);

		setJMenuBar(viewerBar);

		pack();
	}

	private void showHelp(java.awt.event.ActionEvent evt) {
		HelpFrame hf = null;
		try {
			hf = new HelpFrame(".." + File.separatorChar + "doc" + File.separatorChar + "help.html");
			hf.show();
		} catch (IOException e) {
			JOptionPane.showMessageDialog(
				null,
				"The file help.html doesn't exist",
				"Error",
				JOptionPane.ERROR_MESSAGE);
		}

	}

	private void showAbout(java.awt.event.ActionEvent evt) {
		String message = "ARViewer 1.0 \n \n Sebastien Demay \n Damien Delautre \n \n LIFL - OPAC";
		JOptionPane.showMessageDialog(this, message, "About ARViewer", JOptionPane.INFORMATION_MESSAGE);

	}

	private void printPerformed(java.awt.event.ActionEvent evt) {
		PrinterJob job = PrinterJob.getPrinterJob();
		job.setJobName("ARViewer printing");
		job.setCopies(1);
		PageFormat pf = job.defaultPage();
		int toPrint = viewerTabbedPanel.getSelectedIndex();
		switch (toPrint) {
			case 1 :
				setXY3D();
				visu1Panel3D.createInternalImage(x3D, y3D);
				job.setPrintable(visu1Panel3D, pf);
				break;
			case 2 :
				job.setPrintable(visu2PanelLine, pf);
				break;
			case 3 :
				job.setPrintable(visu3Panel, pf);
				break;
		}

		if (job.printDialog())
			try {
				job.print();
			} catch (Exception e) {
				JOptionPane.showMessageDialog(
					null,
					e.getMessage(),
					"Error",
					JOptionPane.ERROR_MESSAGE);
			}

	}

	private void setXY3D() {

		x3D = this.getX();
		y3D = this.getY();

		x3D += this.getContentPane().getX();
		y3D += this.getContentPane().getY();

		y3D += viewerBar.getHeight();

		x3D += visu1Panel.getX();
		y3D += visu1Panel.getY();

	}

	private File getFile() {
		JFileChooser jfc = new JFileChooser();
		int result = jfc.showOpenDialog(this);
		if (result == JFileChooser.APPROVE_OPTION) {
			File f = jfc.getSelectedFile();
			return f;
		}
		return null;
	}

	private void savePerformed(java.awt.event.ActionEvent evt) {
		int toPrint = viewerTabbedPanel.getSelectedIndex();
		File f = null;
		try {
			switch (toPrint) {
				case 1 :
					setXY3D();
					visu1Panel3D.createInternalImage(x3D, y3D);

					f = getFile();
					visu1Panel3D.save(f, x3D, y3D - 1);
					break;
				case 2 :
					f = getFile();
					visu2PanelLine.save(f);
					break;
				case 3 :
					f = getFile();
					visu3Panel.save(f);
					break;
			}
		} catch (IOException ioe) {
			JOptionPane.showMessageDialog(
				null,
				"The file doesn't exist",
				"Error",
				JOptionPane.ERROR_MESSAGE);
		}
	}

	private void openPerformed(java.awt.event.ActionEvent evt) {
		JFileChooser jfc = new JFileChooser();
		int result = jfc.showOpenDialog(this);
		if (result == JFileChooser.APPROVE_OPTION) {
			File f = jfc.getSelectedFile();
			RulesParser rp = null;
			try {
			rp = new RulesParser(f);
			
			rp.parse();
			} catch (Exception e) {
				JOptionPane.showMessageDialog(
								null,
								e.getMessage(),
								"Error",
								JOptionPane.ERROR_MESSAGE);
			}
			Rule[] rules = rp.getRules();
			criteres = rp.getCriteres();

			selectionPanel.openPerformed(rules, criteres);
		}

	}

	private void quitPerformed(java.awt.event.ActionEvent evt) {
		System.exit(0);
	}

	/** Exit the Application */
	private void exitForm(java.awt.event.WindowEvent evt) {
		System.exit(0);
	}

	private void panelChanged() {
		int numTab = viewerTabbedPanel.getSelectedIndex();
		visu1Rules = selectionPanel.getSelectedRules(1);
		visu2Rules = selectionPanel.getSelectedRules(2);
		visu3Rules = selectionPanel.getSelectedRules(3);

		switch (numTab) {
			case 1 :
				String[] selectedCriteria =
					selectionPanel.getSelectedCriteria();
				visu1Panel.setData(visu1Rules, selectedCriteria);
				visu1Panel.setSelectedRules(visu2Rules);
				break;
			case 2 :
				visu2Panel.setData(visu2Rules, criteres);
				visu2Panel.setSelectedRules(visu3Rules);
				break;
			case 3 :
				visu3Panel.setData(visu3Rules);
				break;
		}

	}

	public void valueChanged(MultipleListSelectionEvent e) {
		if (!e.isEmptySelection()) {
			int i = e.getListIndex();
			viewerTabbedPanel.setEnabledAt(i, true);
		} else {
			int i = e.getListIndex();
			viewerTabbedPanel.setEnabledAt(i, false);
		}
	}

	public void actionPerformed(ActionEvent evt) {
		RulesSelectionPanel rsp = (RulesSelectionPanel) evt.getSource();
		Rule[] selectedRules = rsp.getSelectedRules();
		int listIndex = viewerTabbedPanel.getSelectedIndex();
		selectionPanel.setSelectedRules(listIndex + 1, selectedRules);
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		ARViewer arv = new ARViewer();
		arv.setExtendedState(JFrame.MAXIMIZED_BOTH);
		arv.show();
	}

	// Variables declaration - do not modify
	private selection.SelectionPanel selectionPanel;
	private javax.swing.JTabbedPane viewerTabbedPanel;
	private javax.swing.JMenu fileMenu;
	private Panel3D visu1Panel3D;
	private visu2.PanelLine visu2PanelLine;
	private visu3.PanelDDecker visu3Panel;
	private javax.swing.JMenuItem aboutItem;
	private javax.swing.JMenuBar viewerBar;
	private selection.RulesSelectionPanel visu2Panel;
	private javax.swing.JMenuItem quitItem;
	private javax.swing.JMenuItem openItem;
	private javax.swing.JMenuItem contentsItem;
	private javax.swing.JMenuItem printItem;
	private javax.swing.JMenuItem saveItem;
	private selection.RulesSelectionPanel visu1Panel;
	private javax.swing.JMenu helpMenu;
	// End of variables declaration

}
