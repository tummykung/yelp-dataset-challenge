\name{train.learner}
\alias{train.learner,classif.ada,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\title{train.learner,classif.ada,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner,classif.adaboost.M1,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,base.wrapper,character,data.frame,data.desc,task.desc,numeric,ANY-method}
\alias{train.learner}
\alias{train.learner,classif.blackboost,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,regr.blackboost,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,classif.ctree,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,regr.earth,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,filter.wrapper,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,classif.gbm,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,regr.gbm,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,classif.glmboost,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,classif.grplasso,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,classif.J48,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,classif.JRip,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,classif.kknn,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,regr.kknn,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,regr.km,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,classif.ksvm,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,regr.ksvm,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,regr.lasso,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,classif.lda,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,regr.lm,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,classif.loclda,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,classif.logreg,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,classif.lssvm,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,classif.lvq1,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,regr.mars,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,classif.mda,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,multiclass.wrapper,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,classif.multinom,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,classif.naiveBayes,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,classif.nnet,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,regr.nnet,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,classif.OneR,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,opt.wrapper,character,data.frame,data.desc,task.desc,numeric,ANY-method}
\alias{train.learner}
\alias{train.learner,classif.PART,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,regr.pcr,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,classif.lpsvm,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,preproc.wrapper,character,data.frame,data.desc,task.desc,numeric,ANY-method}
\alias{train.learner}
\alias{train.learner,classif.qda,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,classif.randomForest,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,regr.randomForest,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,classif.rda,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,regr.ridge,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,classif.rpart,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,regr.rpart,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,regr.rsm,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,regr.rvm,character,data.frame,data.desc,task.desc,numeric,missing-method}
\alias{train.learner}
\alias{train.learner,classif.sda,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner,classif.svm,character,data.frame,data.desc,task.desc,numeric,matrix-method}
\alias{train.learner}
\alias{train.learner-methods}
\alias{train.learner}
\description{Mainly for internal use. Trains a wrapped learner on a given training set, 
w.r.t. some hyperparameters, case weights and costs.
You have to implement this method if you want to add another learner to this package.}
\value{\code{train.learner-methods}: Model of the underlying learner.

}
\arguments{\item{.learner}{[\\code{\\linkS4class{learner}}] \cr  
Wrapped learner from this package.}
\item{.targetvar}{[\code{\link{character}}] \cr
Name of the target variable.}
\item{.data}{[\code{\link{data.frame}}] \cr
Complete training set.}
\item{weights}{[\code{\link{numeric}}] \cr
Case weights, default is 1, which means every case is assigned equal weight.
If your learner does not support this, simply ignore this argument.}
\item{costs}{[\code{\link{matrix}}] \cr
Misclassification costs, which should be used during training. 
If your learner does not support this, simply ignore this argument.}
\item{...}{[any] \cr
Additional parameters, which need to be passed to the underlying train function.}
}
