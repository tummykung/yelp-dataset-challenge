<project name="TPP" default="compile" basedir=".">
	<!-- 
  ===========================================================================
   Ant build file for TPP as a weka package. 

   Type ant -projecthelp for targets and descriptions.

  ===========================================================================
-->

	<!-- set global properties for this build -->
	<property name="package" value="TPP" />
	<property name="version" value="1.0.6" />
	<property name="src" value="src" />
	<property name="lib" value="lib" />
	<property name="build" value="build" />
	<property name="dist" value="dist" />
	<property name="doc" value="doc" />
	<property name="javac_max_memory" value="256m" />
	<property name="debug" value="on" />

	<target name="init_all">
		<!-- Create the time stamp -->
		<tstamp />
	</target>

	<!-- general classpath definition, incl. CLASSPATH env. variable,
   // but jars in lib directory have precedence over the CLASSPATH variable -->
	<path id="project.class.path">
		<fileset dir="${lib}">
			<include name="*.jar" />
			<include name="*.zip" />
			<include name="*.zip" />
		</fileset>
		<pathelement location="${build}/classes" />
		<pathelement path="${java.class.path}" />
	</path>

	<!-- 
 ============================================================================
 Compilation and documentation making stuff
 ============================================================================
-->

	<target name="init_compile" depends="init_all">
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}/classes" />
	</target>

	<!-- Compile the java code from ${src}/weka into ${build}/classes -->
	<target name="compile" depends="init_compile" description="Compile package and deposit class files in build/classes">
		<javac srcdir="${src}" fork="yes" memoryMaximumSize="${javac_max_memory}" destdir="${build}/classes" optimize="${optimization}" debug="${debug}" deprecation="${deprecation}" source="1.6" target="1.6">
			<classpath refid="project.class.path" />
		</javac>
		<copy todir="${build}/classes">
			<fileset dir="${src}">
				<include name="**/*.gif" />
				<include name="**/*.png" />
				<include name="**/*.jpeg" />
				<include name="**/*.jpg" />
				<include name="**/*.props" />
				<include name="**/*.txt" />
				<include name="**/*.xml" />
				<include name="**/*.cup" />
				<include name="**/*.flex" />
				<include name="**/*.jflex" />
				<include name="**/*.properties" />
				<include name="**/*.default" />
			</fileset>
		</copy>
	</target>

	<!-- Make the javadocs -->
	<target name="docs" depends="init_all" description="Make javadocs into ./doc/api">
		<mkdir dir="${doc}/api" />
		<javadoc sourcepath="${src}" classpathref="project.class.path" destdir="${doc}/api" Author="yes" Public="yes" link="http://weka.sourceforge.net/doc.dev/" maxmemory="256m" />
	</target>

	<!--
  ===========================================================================
  Release making stuff
  ===========================================================================
-->

	<target name="init_dist" depends="init_all">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}" />
	</target>

	<!-- Put everything in ${build}/classes into the ${package}.jar file -->
	<target name="exejar" depends="compile, docs, init_dist" description="Create a binary jar file in ./dist">
		<jar jarfile="${dist}/${package}.jar" basedir="${build}/classes">
		</jar>
	</target>

	<target name="make_weka_package" depends="clean,exejar" description="Make the weka package zip file.">
		<mkdir dir="${dist}/${package}" />
		<copy todir="${dist}/${package}">
			<fileset dir="${dist}">
				<include name="*.jar" />
			</fileset>
		</copy>
		<delete>
			<fileset dir="${dist}">
				<include name="*.jar" />
			</fileset>
		</delete>
		<copy file="Description.props" todir="${dist}/${package}" />
		<replace file="${dist}/${package}/Description.props" token="*VERSION*" value="${version}" />
		<replace file="${dist}/${package}/Description.props" token="*TODAY*" value="${TODAY}" />
		<copy file="Explorer.props" todir="${dist}/${package}" />
		<copy file="Beans.props" todir="${dist}/${package}" />
		<mkdir dir="${dist}/${package}/lib" />
		<copy todir="${dist}/${package}/lib">
			<fileset dir="${lib}">
				<include name="*.jar" />
				<include name="*.zip" />
				<exclude name="weka.jar" />
			</fileset>
		</copy>
		<mkdir dir="${dist}/${package}/doc" />
		<copy todir="${dist}/${package}/doc">
			<fileset dir="${doc}">
				<include name="**/*" />
			</fileset>
		</copy>
		<mkdir dir="${dist}/${package}/src" />
		<copy todir="${dist}/${package}">
			<fileset dir=".">
				<include name="*.xml" />
				<include name="src/**/*.excludes" />
				<include name="src/**/*.gif" />
				<include name="src/**/*.java" />
				<include name="src/**/*.jpeg" />
				<include name="src/**/*.jpg" />
				<include name="src/**/*.png" />
				<include name="src/**/*.props" />
				<include name="src/**/*.txt" />
				<include name="src/**/*.xml" />
				<include name="src/**/*.cup" />
				<include name="src/**/*.flex" />
				<include name="src/**/*.jflex" />
				<include name="src/**/*.properties" />
				<include name="src/**/*.default" />
				<include name="src/**/*.cost" />
				<include name="src/**/*.arff" />
				<include name="src/**/*.matrix" />
			</fileset>
		</copy>
		<zip destfile="${dist}/${package}-${version}.zip" basedir="${dist}/${package}">
		</zip>
		<delete dir="${dist}/${package}" />
	</target>

	<!-- Put all .java, and .props files into ${dist}/${package}-src.jar-->
	<target name="srcjar" depends="init_dist, init_all" description="Create a jar file containing weka source in ./dist.">
		<!-- jar up the source -->
		<jar jarfile="${dist}/${package}-src-${version}.jar" basedir=".">
			<include name="*.xml" />
			<include name="src/**/*.excludes" />
			<include name="src/**/*.gif" />
			<include name="src/**/*.java" />
			<include name="src/**/*.jpeg" />
			<include name="src/**/*.jpg" />
			<include name="src/**/*.png" />
			<include name="src/**/*.props" />
			<include name="src/**/*.txt" />
			<include name="src/**/*.xml" />
			<include name="src/**/*.cup" />
			<include name="src/**/*.flex" />
			<include name="src/**/*.jflex" />
			<include name="src/**/*.properties" />
			<include name="src/**/*.default" />
			<include name="src/**/*.cost" />
			<include name="src/**/*.arff" />
			<include name="src/**/*.matrix" />
			<include name="lib/**/*.jar" />
		</jar>
	</target>

	<!-- Clean -->
	<target name="clean" depends="init_all" description="Removes the build, dist and reports directories">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>

	<target name="superclean" depends="clean" description="Clean plus removes source trees! and doc directories">
		<!-- WARNING, this deletes the source and doc directories -->
		<delete dir="${src}" />
		<delete dir="${doc}" />
	</target>
</project>
